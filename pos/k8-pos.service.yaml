apiVersion: apps/v1
kind: Deployment
metadata:
  name: pos-backing
  labels:
    app: BACKING
spec:
  replicas: 1
  selector:
    matchLabels:
      app: BACKING
  template:
    metadata:
      labels:
        app: BACKING
    spec:
      containers:
        - name: pos-config-java
          image: docker.io/library/pos-web-config-java
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
        - name: pos-keycloak
          image: bitnami/keycloak
          env:
            - name: KEYCLOAK_DATABASE_HOST
              value: localhost
            - name: KEYCLOAK_DATABASE_NAME
              value: pos_agents
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: admin
            - name: KEYCLOAK_ADMIN_USER
              value: admin
            - name: KEYCLOAK_DATABASE_USER
              value: pos
          ports:
            - containerPort: 8080
        - name: pos-postgres
          image: postgres
          env:
            - name: POSTGRES_DB
              value: pos_agents
            - name: POSTGRES_USER
              value: pos
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          ports:
            - containerPort: 5432
        - name: pos-mongo
          image: mongo
          ports:
            - containerPort: 27018
---
apiVersion: v1
kind: Service
metadata:
  name: pos-backing-service
spec:
  type: LoadBalancer
  selector:
    app: BACKING
  ports:
    - targetPort: 8080
      port: 8080
      name: keycloak
    - targetPort: 8081
      port: 8081
      name: config-server
    - targetPort: 5432
      port: 5432
      name: pos-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pos-multi
spec:
  selector:
    matchLabels:
      app: pos-multi
  template:
    metadata:
      labels:
        app: pos-multi
    spec:
      containers:
        - name: pos-java-primary
          image: docker.io/library/pos-java
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
          env:
            - name: CONFIG_SERVER_URI
              value: http://pos-backing-service:8081
            - name: SPRING_PROFILES_ACTIVE
              value: dockerized,secure,cor
---
apiVersion: v1
kind: Service
metadata:
  name: pos-primary-service
spec:
  type: LoadBalancer
  selector:
    app: pos-multi
  ports:
    - port: 9000
      targetPort: 9000
      name: pos-primary

